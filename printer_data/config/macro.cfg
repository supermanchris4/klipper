[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}

 	M104 S{EXTRUDER_TEMP}
    M140 S{BED_TEMP}

    G90 ; Use absolute coordinates
	M83 ; Extruder relative mode
    G28 ; Home the printer
	G92 E0 ; Reset Extruder

    # If you are generating a new bed mesh:
    # BED_MESH_CALIBRATE ADAPTIVE=1
    ## NOTE:    The adaptive meshing feature requires exclude_object     ##
    ##      and may require 'Label Objects' to be enabled in the slicer  ##
    ##           To mesh without it just use BED_MESH_CALIBRATE          ##

	# Load existing mesh
    BED_MESH_PROFILE LOAD=default  # 'nozzle0.6'	

    # Set and wait for nozzle to reach printing temperature
    M109 S{EXTRUDER_TEMP}
    M190 S{BED_TEMP}

    PURGE_LINE

# Enable exclude_object for adaptive meshing
#[exclude_object]

[gcode_macro END_PRINT]
gcode:
	G1 E-12; Retracts filament to prevent oozing

    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M107

    G91 ; Use relative coordinates
    G1 Z10 F3000 ; Move nozzle away
    G90 ; Use absolute coordinates
	G1 X0 Y200 F3000 ; present print
    M84 X Y E ; disable motors

[gcode_macro PURGE_LINE]
gcode:
	G1 Z2 F240
	G1 X2 Y10 F3000
	G1 Z0.28 F240
    G92 E0
	G1 Y190 E15 F1500
	G1 X2.3 F5000
	G1 Y10 E30 F1200
	G92 E0

[gcode_macro UNLOAD_FILAMENT]
gcode:
  M117 Filament unload
  G91
  G92 E0
  G1  E20 F240
  G92 E0
  G1  E-10 F2100
  G92 E0
  G1  E-100 F2100
  G92 E0
  G1  E-100 F2100
  G92 E0
  G1  E-100 F2100
  G92 E0
  G1  E-100 F1800
  G92 E0
  G1  E-100 F1800
  G92 E0
  G1  E-100 F1800
  G92 E0
  G1  E-10 F900
  G90
  M117

[gcode_macro LOAD_FILAMENT]
gcode:
  M117 Filament load
  G91
  G92 E0
  G1 E100 F1800
  G92 E0
  G1 E100 F1800
  G92 E0
  G1 E100 F1800
  G92 E0
  G1 E100 F1800
  G92 E0
  G1  E75 F120
  G92 E0
  G90
  M117
  
[pause_resume]
recover_velocity: 700

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_minimum.x|float %}
  {% set y_park = printer.toolhead.axis_maximum.y|float %}
  {% set z_park_delta = 10.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}
